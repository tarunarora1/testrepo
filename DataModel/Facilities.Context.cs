//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FacilitiesEntities : DbContext
    {
        public FacilitiesEntities()
            : base("name=FacilitiesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CGSFileType> CGSFileTypes { get; set; }
        public virtual DbSet<ClientProblemClass> ClientProblemClasses { get; set; }
        public virtual DbSet<ClientProblemCode> ClientProblemCodes { get; set; }
        public virtual DbSet<ClientResourceDetail> ClientResourceDetails { get; set; }
        public virtual DbSet<ClientResourceHeader> ClientResourceHeaders { get; set; }
        public virtual DbSet<ClientServiceRequestPriority> ClientServiceRequestPriorities { get; set; }
        public virtual DbSet<ClientServiceRequestStatus> ClientServiceRequestStatuses { get; set; }
        public virtual DbSet<ClientUser> ClientUsers { get; set; }
        public virtual DbSet<ClientVendor> ClientVendors { get; set; }
        public virtual DbSet<CustomerLocation> CustomerLocations { get; set; }
        public virtual DbSet<CustomerLocationUser> CustomerLocationUsers { get; set; }
        public virtual DbSet<CustomerResourceDetail> CustomerResourceDetails { get; set; }
        public virtual DbSet<CustomerResourceHeader> CustomerResourceHeaders { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerUser> CustomerUsers { get; set; }
        public virtual DbSet<ResourceTypeDetail> ResourceTypeDetails { get; set; }
        public virtual DbSet<ResourceTypeHeader> ResourceTypeHeaders { get; set; }
        public virtual DbSet<RoleGroup> RoleGroups { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SiteContent> SiteContents { get; set; }
        public virtual DbSet<Status> Statuses { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<VendorUser> VendorUsers { get; set; }
        public virtual DbSet<ClientInsuranceType> ClientInsuranceTypes { get; set; }
        public virtual DbSet<ClientVendorInsurance> ClientVendorInsurances { get; set; }
        public virtual DbSet<ClientVendorProblemClass> ClientVendorProblemClasses { get; set; }
        public virtual DbSet<ClientServiceType> ClientServiceTypes { get; set; }
        public virtual DbSet<ClientWorkOrderNoteType> ClientWorkOrderNoteTypes { get; set; }
        public virtual DbSet<WorkOrderAttachment> WorkOrderAttachments { get; set; }
        public virtual DbSet<WorkOrderNote> WorkOrderNotes { get; set; }
        public virtual DbSet<ClientClassOfGood> ClientClassOfGoods { get; set; }
        public virtual DbSet<WorkOrderVendorInvoiceDetail> WorkOrderVendorInvoiceDetails { get; set; }
        public virtual DbSet<ClientWorkOrderAction> ClientWorkOrderActions { get; set; }
        public virtual DbSet<WorkOrderAction> WorkOrderActions { get; set; }
        public virtual DbSet<CGSAction> CGSActions { get; set; }
        public virtual DbSet<ClientActionStatus> ClientActionStatuses { get; set; }
        public virtual DbSet<ClientAttachmentType> ClientAttachmentTypes { get; set; }
        public virtual DbSet<ServiceRequestAttachment> ServiceRequestAttachments { get; set; }
        public virtual DbSet<ServiceRequestInvoiceDetail> ServiceRequestInvoiceDetails { get; set; }
        public virtual DbSet<ServiceRequestInvoiceHeader2VendorInvoice> ServiceRequestInvoiceHeader2VendorInvoice { get; set; }
        public virtual DbSet<WorkOrderVendorInvoiceHeader> WorkOrderVendorInvoiceHeaders { get; set; }
        public virtual DbSet<ClientServiceRequestActionStatus> ClientServiceRequestActionStatuses { get; set; }
        public virtual DbSet<InvoiceStatus> InvoiceStatuses { get; set; }
        public virtual DbSet<ServiceRequest> ServiceRequests { get; set; }
        public virtual DbSet<CGSSRAction> CGSSRActions { get; set; }
        public virtual DbSet<ClientServiceRequestAction> ClientServiceRequestActions { get; set; }
        public virtual DbSet<ClientServiceRequestNoteType> ClientServiceRequestNoteTypes { get; set; }
        public virtual DbSet<ServiceRequestAction> ServiceRequestActions { get; set; }
        public virtual DbSet<ServiceRequestNote> ServiceRequestNotes { get; set; }
        public virtual DbSet<WorkOrder> WorkOrders { get; set; }
        public virtual DbSet<ServiceRequestInvoiceHeader> ServiceRequestInvoiceHeaders { get; set; }
        public virtual DbSet<ServiceRequestInvoiceAction> ServiceRequestInvoiceActions { get; set; }
        public virtual DbSet<ServiceRequestInvoiceHeaderApiResponse> ServiceRequestInvoiceHeaderApiResponses { get; set; }
        public virtual DbSet<CGSDateTimeUnit> CGSDateTimeUnits { get; set; }
        public virtual DbSet<LinkHeader> LinkHeaders { get; set; }
        public virtual DbSet<CGSLinkDetail> CGSLinkDetails { get; set; }
        public virtual DbSet<CGSLinkHeader> CGSLinkHeaders { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<LinkDetail> LinkDetails { get; set; }
        public virtual DbSet<CGSInterval> CGSIntervals { get; set; }
        public virtual DbSet<PMVendor> PMVendors { get; set; }
        public virtual DbSet<PMVendorCustomerLocation> PMVendorCustomerLocations { get; set; }
        public virtual DbSet<CGSTheme> CGSThemes { get; set; }
        public virtual DbSet<CGSColumn> CGSColumns { get; set; }
        public virtual DbSet<CGSColumnType> CGSColumnTypes { get; set; }
        public virtual DbSet<ClientPMHeader> ClientPMHeaders { get; set; }
        public virtual DbSet<PMWorkOrderCreationDate> PMWorkOrderCreationDates { get; set; }
        public virtual DbSet<CGSThemeTemplate> CGSThemeTemplates { get; set; }
        public virtual DbSet<ClientCustomer> ClientCustomers { get; set; }
        public virtual DbSet<CGSThemeTemplateType> CGSThemeTemplateTypes { get; set; }
        public virtual DbSet<CGSThemeTemplateLogo> CGSThemeTemplateLogoes { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<PMTestTable> PMTestTables { get; set; }
    
        public virtual ObjectResult<prc_createWorkOrderNumber_Result> prc_createWorkOrderNumber(Nullable<System.Guid> clientId, string serviceRequestType)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(System.Guid));
    
            var serviceRequestTypeParameter = serviceRequestType != null ?
                new ObjectParameter("ServiceRequestType", serviceRequestType) :
                new ObjectParameter("ServiceRequestType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_createWorkOrderNumber_Result>("prc_createWorkOrderNumber", clientIdParameter, serviceRequestTypeParameter);
        }
    
        public virtual ObjectResult<prc_GetCustomerLocationsForUser_Result> prc_GetCustomerLocationsForUser(Nullable<System.Guid> userId, string uSERGROUPNAME)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var uSERGROUPNAMEParameter = uSERGROUPNAME != null ?
                new ObjectParameter("USERGROUPNAME", uSERGROUPNAME) :
                new ObjectParameter("USERGROUPNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetCustomerLocationsForUser_Result>("prc_GetCustomerLocationsForUser", userIdParameter, uSERGROUPNAMEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prc_SaveWorkOrderActionDetails(Nullable<System.Guid> workOrderId, Nullable<System.Guid> status, Nullable<System.Guid> user, Nullable<System.Guid> client, Nullable<System.DateTime> complitionDate, string notes, string actionCode)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(System.Guid));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(System.Guid));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(System.Guid));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(System.Guid));
    
            var complitionDateParameter = complitionDate.HasValue ?
                new ObjectParameter("ComplitionDate", complitionDate) :
                new ObjectParameter("ComplitionDate", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var actionCodeParameter = actionCode != null ?
                new ObjectParameter("ActionCode", actionCode) :
                new ObjectParameter("ActionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prc_SaveWorkOrderActionDetails", workOrderIdParameter, statusParameter, userParameter, clientParameter, complitionDateParameter, notesParameter, actionCodeParameter);
        }
    
        public virtual ObjectResult<prc_GetWorkOrderVendorInvoiceData_Result> prc_GetWorkOrderVendorInvoiceData(Nullable<System.Guid> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetWorkOrderVendorInvoiceData_Result>("prc_GetWorkOrderVendorInvoiceData", workOrderIdParameter);
        }
    
        public virtual ObjectResult<prc_GetAttachment_Result> prc_GetAttachment(Nullable<System.Guid> attachmentId, string attachmentSource)
        {
            var attachmentIdParameter = attachmentId.HasValue ?
                new ObjectParameter("AttachmentId", attachmentId) :
                new ObjectParameter("AttachmentId", typeof(System.Guid));
    
            var attachmentSourceParameter = attachmentSource != null ?
                new ObjectParameter("AttachmentSource", attachmentSource) :
                new ObjectParameter("AttachmentSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetAttachment_Result>("prc_GetAttachment", attachmentIdParameter, attachmentSourceParameter);
        }
    
        public virtual ObjectResult<prc_GetInvoiceServiceData_Result> prc_GetInvoiceServiceData(Nullable<System.Guid> serviceId, string invoiceandQuote, Nullable<System.Guid> serviceRequestInvoiceheaderId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(System.Guid));
    
            var invoiceandQuoteParameter = invoiceandQuote != null ?
                new ObjectParameter("InvoiceandQuote", invoiceandQuote) :
                new ObjectParameter("InvoiceandQuote", typeof(string));
    
            var serviceRequestInvoiceheaderIdParameter = serviceRequestInvoiceheaderId.HasValue ?
                new ObjectParameter("ServiceRequestInvoiceheaderId", serviceRequestInvoiceheaderId) :
                new ObjectParameter("ServiceRequestInvoiceheaderId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetInvoiceServiceData_Result>("prc_GetInvoiceServiceData", serviceIdParameter, invoiceandQuoteParameter, serviceRequestInvoiceheaderIdParameter);
        }
    
        public virtual ObjectResult<prc_GetServiceInvoiceDetailsDataWithWorkOrder_Result> prc_GetServiceInvoiceDetailsDataWithWorkOrder(Nullable<System.Guid> serviceRequestInvoiceHeader)
        {
            var serviceRequestInvoiceHeaderParameter = serviceRequestInvoiceHeader.HasValue ?
                new ObjectParameter("ServiceRequestInvoiceHeader", serviceRequestInvoiceHeader) :
                new ObjectParameter("ServiceRequestInvoiceHeader", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetServiceInvoiceDetailsDataWithWorkOrder_Result>("prc_GetServiceInvoiceDetailsDataWithWorkOrder", serviceRequestInvoiceHeaderParameter);
        }
    
        public virtual ObjectResult<prc_GetServiceInvoiceServiceDetailsData_Result> prc_GetServiceInvoiceServiceDetailsData(Nullable<System.Guid> serviceId, string invoiceandQuote, string projectCall)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(System.Guid));
    
            var invoiceandQuoteParameter = invoiceandQuote != null ?
                new ObjectParameter("InvoiceandQuote", invoiceandQuote) :
                new ObjectParameter("InvoiceandQuote", typeof(string));
    
            var projectCallParameter = projectCall != null ?
                new ObjectParameter("ProjectCall", projectCall) :
                new ObjectParameter("ProjectCall", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetServiceInvoiceServiceDetailsData_Result>("prc_GetServiceInvoiceServiceDetailsData", serviceIdParameter, invoiceandQuoteParameter, projectCallParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> prc_SaveServiceRequestActionDetails(Nullable<System.Guid> serviceRequestId, Nullable<System.Guid> status, Nullable<System.Guid> user, Nullable<System.Guid> client, Nullable<System.Guid> clientServiceRequestAction, Nullable<System.Guid> serviceRequestInvoiceHeader, string notes, string actionCode)
        {
            var serviceRequestIdParameter = serviceRequestId.HasValue ?
                new ObjectParameter("ServiceRequestId", serviceRequestId) :
                new ObjectParameter("ServiceRequestId", typeof(System.Guid));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(System.Guid));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(System.Guid));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(System.Guid));
    
            var clientServiceRequestActionParameter = clientServiceRequestAction.HasValue ?
                new ObjectParameter("ClientServiceRequestAction", clientServiceRequestAction) :
                new ObjectParameter("ClientServiceRequestAction", typeof(System.Guid));
    
            var serviceRequestInvoiceHeaderParameter = serviceRequestInvoiceHeader.HasValue ?
                new ObjectParameter("ServiceRequestInvoiceHeader", serviceRequestInvoiceHeader) :
                new ObjectParameter("ServiceRequestInvoiceHeader", typeof(System.Guid));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var actionCodeParameter = actionCode != null ?
                new ObjectParameter("ActionCode", actionCode) :
                new ObjectParameter("ActionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("prc_SaveServiceRequestActionDetails", serviceRequestIdParameter, statusParameter, userParameter, clientParameter, clientServiceRequestActionParameter, serviceRequestInvoiceHeaderParameter, notesParameter, actionCodeParameter);
        }
    
        public virtual ObjectResult<GetCustomerLocationUsers_Result> GetCustomerLocationUsers(Nullable<System.Guid> cusomerLocation)
        {
            var cusomerLocationParameter = cusomerLocation.HasValue ?
                new ObjectParameter("cusomerLocation", cusomerLocation) :
                new ObjectParameter("cusomerLocation", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerLocationUsers_Result>("GetCustomerLocationUsers", cusomerLocationParameter);
        }
    
        public virtual ObjectResult<GetCustomerEmailAddressForInvoiceQuote_Result> GetCustomerEmailAddressForInvoiceQuote(Nullable<System.Guid> cusomerLocation)
        {
            var cusomerLocationParameter = cusomerLocation.HasValue ?
                new ObjectParameter("cusomerLocation", cusomerLocation) :
                new ObjectParameter("cusomerLocation", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerEmailAddressForInvoiceQuote_Result>("GetCustomerEmailAddressForInvoiceQuote", cusomerLocationParameter);
        }
    
        public virtual ObjectResult<GetServiceRequestIvoiceQuoteCount_Result> GetServiceRequestIvoiceQuoteCount(Nullable<System.Guid> serviceRequest)
        {
            var serviceRequestParameter = serviceRequest.HasValue ?
                new ObjectParameter("ServiceRequest", serviceRequest) :
                new ObjectParameter("ServiceRequest", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServiceRequestIvoiceQuoteCount_Result>("GetServiceRequestIvoiceQuoteCount", serviceRequestParameter);
        }
    
        public virtual ObjectResult<Get_serviceandworkorderattachmentdata_Result> Get_serviceandworkorderattachmentdata(Nullable<System.Guid> serviceRequestID)
        {
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_serviceandworkorderattachmentdata_Result>("Get_serviceandworkorderattachmentdata", serviceRequestIDParameter);
        }
    
        public virtual ObjectResult<Get_ServiceWorkOrderNoteGridData_Result> Get_ServiceWorkOrderNoteGridData(Nullable<System.Guid> workOrderID, Nullable<System.Guid> serviceRequestID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(System.Guid));
    
            var serviceRequestIDParameter = serviceRequestID.HasValue ?
                new ObjectParameter("ServiceRequestID", serviceRequestID) :
                new ObjectParameter("ServiceRequestID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ServiceWorkOrderNoteGridData_Result>("Get_ServiceWorkOrderNoteGridData", workOrderIDParameter, serviceRequestIDParameter);
        }
    
        public virtual ObjectResult<Get_ServiceQuoteUserStatusGridData_Result> Get_ServiceQuoteUserStatusGridData(Nullable<System.Guid> serviceRequestInvoiceHeader, string projectCall)
        {
            var serviceRequestInvoiceHeaderParameter = serviceRequestInvoiceHeader.HasValue ?
                new ObjectParameter("ServiceRequestInvoiceHeader", serviceRequestInvoiceHeader) :
                new ObjectParameter("ServiceRequestInvoiceHeader", typeof(System.Guid));
    
            var projectCallParameter = projectCall != null ?
                new ObjectParameter("ProjectCall", projectCall) :
                new ObjectParameter("ProjectCall", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ServiceQuoteUserStatusGridData_Result>("Get_ServiceQuoteUserStatusGridData", serviceRequestInvoiceHeaderParameter, projectCallParameter);
        }
    
        public virtual ObjectResult<prc_createNumberNew_Result> prc_createNumberNew(string createNumberFor, Nullable<System.Guid> clientId, string serviceRequestType)
        {
            var createNumberForParameter = createNumberFor != null ?
                new ObjectParameter("CreateNumberFor", createNumberFor) :
                new ObjectParameter("CreateNumberFor", typeof(string));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(System.Guid));
    
            var serviceRequestTypeParameter = serviceRequestType != null ?
                new ObjectParameter("ServiceRequestType", serviceRequestType) :
                new ObjectParameter("ServiceRequestType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_createNumberNew_Result>("prc_createNumberNew", createNumberForParameter, clientIdParameter, serviceRequestTypeParameter);
        }
    
        public virtual ObjectResult<prc_createNumber_Result> prc_createNumber(string createNumberFor, Nullable<System.Guid> clientId, string serviceRequestType)
        {
            var createNumberForParameter = createNumberFor != null ?
                new ObjectParameter("CreateNumberFor", createNumberFor) :
                new ObjectParameter("CreateNumberFor", typeof(string));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(System.Guid));
    
            var serviceRequestTypeParameter = serviceRequestType != null ?
                new ObjectParameter("ServiceRequestType", serviceRequestType) :
                new ObjectParameter("ServiceRequestType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_createNumber_Result>("prc_createNumber", createNumberForParameter, clientIdParameter, serviceRequestTypeParameter);
        }
    
        public virtual ObjectResult<prc_GetPMConfirmationData_Result> prc_GetPMConfirmationData(Nullable<System.Guid> pMHeaderId)
        {
            var pMHeaderIdParameter = pMHeaderId.HasValue ?
                new ObjectParameter("PMHeaderId", pMHeaderId) :
                new ObjectParameter("PMHeaderId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetPMConfirmationData_Result>("prc_GetPMConfirmationData", pMHeaderIdParameter);
        }
    
        public virtual ObjectResult<prc_GetPMWorkOrder_Result> prc_GetPMWorkOrder(Nullable<System.Guid> pMVendorId, Nullable<System.Guid> client, Nullable<System.Guid> pMHeaderId)
        {
            var pMVendorIdParameter = pMVendorId.HasValue ?
                new ObjectParameter("PMVendorId", pMVendorId) :
                new ObjectParameter("PMVendorId", typeof(System.Guid));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(System.Guid));
    
            var pMHeaderIdParameter = pMHeaderId.HasValue ?
                new ObjectParameter("PMHeaderId", pMHeaderId) :
                new ObjectParameter("PMHeaderId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetPMWorkOrder_Result>("prc_GetPMWorkOrder", pMVendorIdParameter, clientParameter, pMHeaderIdParameter);
        }
    
        public virtual ObjectResult<GetServiceRequests_Result> GetServiceRequests(Nullable<System.Guid> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServiceRequests_Result>("GetServiceRequests", clientIdParameter);
        }
    
        [DbFunction("FacilitiesEntities", "fn_getClientResourceData")]
        public virtual IQueryable<fn_getClientResourceData_Result> fn_getClientResourceData(Nullable<System.Guid> clientID, string resourceName)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("clientID", clientID) :
                new ObjectParameter("clientID", typeof(System.Guid));
    
            var resourceNameParameter = resourceName != null ?
                new ObjectParameter("resourceName", resourceName) :
                new ObjectParameter("resourceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_getClientResourceData_Result>("[FacilitiesEntities].[fn_getClientResourceData](@clientID, @resourceName)", clientIDParameter, resourceNameParameter);
        }
    
        public virtual ObjectResult<prc_GetPMModuleDetails_Result> prc_GetPMModuleDetails(Nullable<System.Guid> client)
        {
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetPMModuleDetails_Result>("prc_GetPMModuleDetails", clientParameter);
        }
    
        public virtual ObjectResult<GetServiceRequestsForLocationUser_Result> GetServiceRequestsForLocationUser(string uSEREMAILID, string uSERGROUPNAME)
        {
            var uSEREMAILIDParameter = uSEREMAILID != null ?
                new ObjectParameter("USEREMAILID", uSEREMAILID) :
                new ObjectParameter("USEREMAILID", typeof(string));
    
            var uSERGROUPNAMEParameter = uSERGROUPNAME != null ?
                new ObjectParameter("USERGROUPNAME", uSERGROUPNAME) :
                new ObjectParameter("USERGROUPNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServiceRequestsForLocationUser_Result>("GetServiceRequestsForLocationUser", uSEREMAILIDParameter, uSERGROUPNAMEParameter);
        }
    }
}
